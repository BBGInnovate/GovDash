require 'rack/oauth2'
require 'authentication'

class FacebooksController < ApplicationController
  include Authentication

  layout 'facebook'
  before_filter :require_authentication, :only => :destroy
  before_filter :get_accounts, :only=>[:edit,:index,:new]
  
  rescue_from FbGraph::Exception, :with => :fb_graph_exception

  helper_method :authenticated?
  
  def fb_graph_exception(e)
    flash[:error] = {
      :title   => e.class,
      :message => e.message
    }
    current_user.try(:destroy)
    redirect_to root_url
  end
  
  rescue_from Rack::OAuth2::Client::Error, :with => :oauth2_error

  def index
    uri = URI.parse Facebook.config[:canvas_url] 
    @emails = AppToken.select("distinct api_user_email").
       where("api_user_email is not null").
       where("canvas_url='#{uri.host}'").to_a.
       map{|c| [c.api_user_email]}.unshift(['--Email--',''])
  end
  
  def edit
    render :partial=>"account"
  end
  
  # handle Facebook Auth Cookie generated by JavaScript SDK
  def show
    auth = Facebook.auth.from_cookie(cookies)
    authenticate Facebook.identify(auth.user)
    redirect_to '/facebooks/index'
  end

  # handle Normal OAuth flow: start
  def new
    client = Facebook.auth(callback_facebook_url).client
    redirect_to client.authorization_uri(
      :scope => Facebook.config[:scope]
    )
  end

  def get_records email
    uri = URI.parse Facebook.config[:canvas_url]
    records = AppToken.includes(:facebook_accounts).
      where("canvas_url='#{uri.host}'").
      where(email).
      references(:facebook_accounts).to_a
  end

  # handle Normal OAuth flow: callback
  def create
    if session[:email]
      apps = AppToken.where(api_user_email: session[:email] ).to_a
      unless apps.empty?
        Facebook.app_token = apps[0]
        client = Facebook.auth(callback_facebook_url).client
        uri = URI.parse client.redirect_uri
        client.authorization_code = params[:code]
        access_token = client.access_token! :client_auth_body
        user = FbGraph::User.me(access_token).fetch
        authenticate Facebook.identify(user)
        apps.each do |app|
          if !app.page_access_token
            app.update_attribute :user_access_token, access_token.access_token
            app.exchange_page_access_token
          end
        end 
      end
    end
    redirect_to '/facebooks/index' # dashboard_url
  end

  def destroy
    unauthenticate
    redirect_to root_url
  end

  private
  
  def get_accounts
    Facebook.app_token = nil
    session[:email] = nil
    @token_count = 0
    @accounts = []
    email = nil
    if params[:email]
      email=params[:email] 
    elsif params[:account] && params[:account][:email]
      email = params[:account][:email]
    end
    @user = email || ''
    if email
      app_token = AppToken.find_by api_user_email: email
      if app_token
        Facebook.app_token = app_token
        session[:email] = email
        @accounts = app_token.facebook_accounts
      end
    else
      @accounts = FacebookAccount.all
    end
    @accounts.each do |ac|
      if !!ac.app_token && ac.app_token.page_access_token
         @token_count += 1
      end
    end
  end
  
  def oauth2_error(e)
    flash[:error] = {
      :title => e.response[:error][:type],
      :message => e.response[:error][:message]
    }
    redirect_to root_url
  end

end
