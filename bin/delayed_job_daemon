#!/bin/sh
#
# delayed_job_daemon to control deploayed job
#
# chkconfig: - 80 05
# description: Run Deplayed Job Daemon
# 
### BEGIN INIT INFO
# Provides:          delayed_job_daemon
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Description:       delayed_job_daemon
# Short-Description: delayed_job_daemon
### END INIT INFO

# copy this file to /etc/init.d/
USER=oddev
ROOT_PATH=/home/$USER/socialdash/current
PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME=delayed_job
START_DAEMON=$ROOT_PATH/start_job.sh
STOP_DAEMON=$ROOT_PATH/stop_job.sh

DESC="delayed_job_daemon"
INIT_LOG_DIR=$ROOT_PATH/tmp
PID_FILE=$ROOT_PATH/tmp/${NAME}.id
PID=0
test -x $START_DAEMON || exit 0

RETVAL=0
set -e

[ -f /etc/default/${NAME} ] && . /etc/default/${NAME}

. /lib/lsb/init-functions
. /lib/init/vars.sh

ensure_pid_dir () {
    PID_DIR=`dirname ${PID_FILE}`
    if [ ! -d ${PID_DIR} ] ; then
        mkdir -p ${PID_DIR}
        chown -R ${USER}:${USER} ${PID_DIR}
        chmod 755 ${PID_DIR}
    fi
}

remove_pid () {
    rm -f ${PID_FILE}
    log_daemon_msg "${PID_FILE} removed"
}

run_check() {
#  if [ -e $PID_FILE ]; then
  PID=`pgrep -f delayed_job`
  if [ "$PID" != "" ]; then
    status_of_proc delayed_job $NAME > /dev/null && RETVAL=0 || RETVAL=$?
  else
    RETVAL=2
  fi
#  pid=`pgrep -f delayed_job`
#  if [ "$pid" != "" ]; then
#    RETVAL=0
#  else
#    RETVAL=1
#  fi
  log_daemon_msg "run_check return: $RETVAL"
}

start_job () {
  run_check
  if [ $RETVAL = 0 ]; then
    log_daemon_msg "$DESC: Already running with PID $PID. Aborting."
    exit 2
  else
    ensure_pid_dir
    start-stop-daemon --start --quiet --oknodo --make-pidfile --pidfile $PID_FILE --exec $START_DAEMON  > /tmp/delayed_job 2>&1 &
    log_daemon_msg "Started"
    exit 0
  fi
}

stop_job () {
  run_check
  if [ $RETVAL = 0 ]; then
    log_daemon_msg "$DESC: Stopping the daemon."
    $STOP_DAEMON
    RETVAL=$?
    remove_pid
    exit $RETVAL
  else
    log_daemon_msg "$DESC: Not currently running. Aborting."
    exit 2
  fi
}

aastop_job () {
  remove_pid
  pid=`pgrep -f delayed_job`
  if [ "$pid" != "" ]; then
    kill -15 $pid
  fi
}
status() {
  run_check
  if [ $RETVAL = 0 ]; then
    log_daemon_msg "$DESC: Currently running with PID $PID."
  else
    log_daemon_msg "$DESC: Not currently running."
  fi
  exit $RETVAL
}
case "$1" in
    restart)
      log_daemon_msg "Restarting $DESC" "$NAME"
      if start_job
      then
          log_end_msg 0 || true
      else
          log_end_msg 1 || true
      fi
      ;;
    start)
      log_daemon_msg "Starting $DESC" "$NAME"
      if start_job
      then
          log_end_msg 0 || true
      else
          log_end_msg 1 || true
      fi
      ;;
    stop)
      log_daemon_msg "Stopping $DESC" "$NAME"
      if stop_job
      then
        log_end_msg 0
      else
        log_end_msg 1
      fi
    ;;
    status)
      status
    ;;
    *)
     echo "Usage: $0 {start|stop|restart|status}" >&2
        RETVAL=1
        ;;
esac

exit $RETVAL

